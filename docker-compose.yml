version: '3'

services:
  postgres-db:
    container_name: postgres-db
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mlflow
    networks:
      - network
    ports:
      - "5432:5432"
    expose:
      - 5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    logging:
      options:
        max-size: 10m
        max-file: "3"

  mlflow-server:
    container_name: mlflow-server
    image: mlflow-server:latest
    build:
      context: .
      dockerfile: mlflow/Dockerfile
    expose:
      - "5001"
    ports:
      - "5001:5001"
    networks:
      - network
    restart: "unless-stopped"
    volumes:
      # /HOST:/CONTAINER
      - "./data/mlflow/artifacts:/data/artifacts"
    depends_on:
      - postgres-db
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5001
      --serve-artifacts
      --artifacts-destination /data/artifacts
      --backend-store-uri postgresql://postgres:postgres@postgres-db:5432/mlflow
      --default-artifact-root /data/artifacts
      --gunicorn-opts "--timeout 180 --log-level debug --access-logfile -"

  jupyter:
    build:
      context: .
      dockerfile: jupyter/Dockerfile
    container_name: jupyter
    ports:
      - "8888:8888"
    networks:
      - network
    volumes:
      - ./data/jupyter:/home/jovyan/work
    command: jupyter lab
    restart: always


  minio:
    image: minio/minio
    container_name: minio_storage
    networks:
      - network
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - "./data/minio/:/minio_data"
    environment:
      MINIO_ROOT_USER: user_minio
      MINIO_ROOT_PASSWORD: p4ssW0rD
    command: server --console-address ":9001" /data

networks:
  network:
    driver: bridge

volumes:
  postgres-data:
  mlflow-server:
    driver: local
  minio: 
    driver: local
  jupyter:
    driver: local